import numpy as np


## Test For Global Optimization ##

def F1(x1):
        
    #ackley
    x=x1[0]
    y=x1[1]
    fx=-20*np.exp(-0.2*np.sqrt(0.5*(x**2+y**2)))-np.exp(0.5*(np.cos(2*3.14*x)+np.cos(2*3.14*y)))+np.exp(1)+20
# =============================================================================
#     fx=-20*np.exp(-0.2*np.sqrt(0.5*(x[0]**2+x[1]**2)))-np.exp(0.5*(np.cos(2*3.14*x[0])+np.cos(2*3.14*x[1])))+np.exp(1)+20
# =============================================================================
    ##8*x[0]**2+4*x[0]*x[1]+5*x[1]**2
    
    return fx



def F2(x1):
    
    ##rosenberg
    x=x1[0]
    y=x1[1]    
# =============================================================================
#     fx=(1.5+x[1]*x[0]-x[0])**2 + (2.25+(x[1]**2)*x[0]-x[0])**2+(2.625+(x[1]**3)*x[0]-x[0])**2
# =============================================================================
    fx=100*(y-x**2)**2 + (1-x)**2
# =============================================================================
#     fx=-20*np.exp(-0.2*np.sqrt(0.5*(x[0]**2+x[1]**2)))-np.exp(0.5*(np.cos(2*3.14*x[0])+np.cos(2*3.14*x[1])))+np.exp(1)+20
# =============================================================================
    ##8*x[0]**2+4*x[0]*x[1]+5*x[1]**2
    
    return fx

